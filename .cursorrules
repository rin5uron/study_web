# .cursorrules

## 📋 コマンドフレーズ一覧
| コマンドフレーズ | 動作内容 |
|----------------|----------|
| 「〇〇分の学習を開始します」 | 指定時間に合わせた学習計画を提案 |
| 「今日はおしまい」 | その日の学習のまとめを記載 |
| 「ログをつけて」 | work_log.mdとtime_log.mdに学習記録を追記 |
| 「ルールに追加して」 | .cursorrulesにルールを追記 |
| 「師匠メモに追加して」 | mentor_notes.mdに学びや気づきを記録 |
| 「辞書に追加して」 | tech_glossary.mdに新しい用語や知識を追記 |
| 「メモに追加して」 | memo_study.mdに学習メモを追記 |

## 🚀 GitHubへの更新方針
- **重要**: GitHubへのコミットと更新（プッシュ）は明示的な指示がある場合のみ行います
- **重要**: 変更をステージングエリア（git add）に追加することも明示的な指示がある場合のみ行います
- 通常の作業はローカル環境でのみ行い、コミットまでを完了させておきます
- GitHubへの反映が必要な場合は「GitHubに反映して」と明示的に依頼します
- コミットする際は、ファイル種類に応じた統一されたコミットメッセージを使用します（下記「💾 コミットメッセージ一覧」参照）
- コミットメッセージに指定がある場合は指定されたメッセージを優先する
- 変更内容ごとに適切にコミットを分け、一度に大量の変更をコミットしないようにします

## 💾 コミットメッセージ一覧
| ファイル種類 | コミットメッセージ |
|------------|------------------|
| time_log.md, work_log.md | 「ログの追加」 |
| mentor_notes.md | 師匠の教え振返り|
| .cursorrules | 「ルールを追加」 |

## 📝 記録の更新ルール
- workフォルダ内の記録ファイル（work_log.md, time_log.md, mentor_notes.md）は、新しい記録を上部に追加する
- 古い記録は下部に移動する
- 記録の日付は【**YYYY/MM/DD**】の形式で統一する
- タイムログとワークログには、指定がない限り基本的に学習の最後に記録する
- 学習の最後になるまでは最初の学習開始時間のみ記録する
- 「今日はおしまい」のフレーズでその日のまとめを記載する
- 現在は2025年として日付を記録する
- ログの日付は前日の日付に基づいて算出する、基本毎日ログをつけることを前提にしている

## 📌 記録ファイルの役割
- work_log.md: 作業内容の詳細記録
- time_log.md: 作業時間の詳細記録
- mentor_notes.md: メンターからの学びの記録
- tech_glossary.md: 技術用語・ショートカット辞典

## 🔄 更新の流れ
1. 新しい記録を最上部に追加
2. 既存の記録は下部に移動
3. 日付の形式を統一
4. 記録の種類に応じた適切なファイルに記録 

## 💬 コミュニケーションルール
- プログラミング初心者にわかりやすい言葉や用語を心がける
- チャットは常にClaude 3.7 Sonnetのthinkingモードにする
- ファイルを追加、ファイル名やファイルの役割等の更新をした際にはREADME.mdも更新する
- ログをつけるときに足りない情報がある場合は知らせる
- ユーザーが打った文字で綴り等を間違えていたら訂正して、訂正時は説明に（）内に正しい文字を表示して訂正したことがわかるようにする
- ユーザーが打った文字の意図を尊重しつつ、体裁を整える程度の修正はする。どの程度までの修正が適切かは随時ユーザーからのフィードバックを受けて学習し、ルールを更新する
- 新しいコマンドフレーズをルールに追加する際は、必ず「📋 コマンドフレーズ一覧」の表にも追記🇲🇵する
- コマンドフレーズが使用された場合は、「📋 コマンドフレーズ一覧」表の対応する動作を実行する
- 学習提案はワークログの次回やることを中心に提案する
- 学習提案はロードマップとweb-basicsに基づいて一貫性のある提案をする
- 教材はweb-basicsファイル内を指す
- ファイル名作成の際は、Web業界内で一般的で分かりやすいファイル名をつける
- ファイルの名前をつけるときは日本語のローマ字表記は用いない
- HTMLファイルとCSSファイルは一般的な名前（index.html, style.css）を使用し、区別はフォルダ名で行う

## 🎨 作品制作のルール
- 作品にコピーライト表示をつける場合は、基本的にGitHubアカウント名（rin5uron）を使用する
- コピーライト表示の形式は `© 2025 rin5uron` または `© 2025 rin5uron All Rights Reserved.` とする
- コピーライト表示はWebページのフッター部分に配置する
- 実習課題では、プロフェッショナルな実務を想定してコピーライト表示を付ける習慣を身につける