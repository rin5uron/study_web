# .cursorrules

## 📋 コマンドフレーズ一覧
| コマンドフレーズ | 動作内容 |
|----------------|----------|
| 「〇〇分の学習を開始します」 | 指定時間に合わせた学習計画を提案 |
| 「今日はおしまい」 | その日の学習のまとめを記載 |
| 「ログをつけて」 | work_log.mdとtime_log.mdに学習記録を追記 |
| 「ルールに追加して」 | .cursorrulesにルールを追記 |

## 📝 記録の更新ルール
- workフォルダ内の記録ファイル（work_log.md, time_log.md, mentor_notes.md）は、新しい記録を上部に追加する
- 古い記録は下部に移動する
- 記録の日付は【**YYYY/MM/DD**】の形式で統一する
- タイムログとワークログには、指定がない限り基本的に学習の最後に記録する
- 学習の最後になるまでは最初の学習開始時間のみ記録する
- 「今日はおしまい」のフレーズでその日のまとめを記載する

## 📌 記録ファイルの役割
- work_log.md: 作業内容の詳細記録
- time_log.md: 作業時間の詳細記録
- mentor_notes.md: メンターからの学びの記録

## 🔄 更新の流れ
1. 新しい記録を最上部に追加
2. 既存の記録は下部に移動
3. 日付の形式を統一
4. 記録の種類に応じた適切なファイルに記録 

## 💬 コミュニケーションルール
- 「ルールに追加して」と記載された場合は.cursorrulesに追記する
- プログラミング初心者にわかりやすい言葉や用語を心がける
- チャットは常にClaude 3.7 Sonnetのthinkingモードにする
- 「ログをつけて」と指示された場合はwork_log.md、time_log.mdへ追記する
- ログをつけるときに足りない情報がある場合は知らせる
- ユーザーが打った文字で綴り等を間違えていたら訂正して、訂正時は説明に（）内に正しい文字を表示して訂正したことがわかるようにする
- ユーザーが打った文字の意図を尊重しつつ、体裁を整える程度の修正はする。どの程度までの修正が適切かは随時ユーザーからのフィードバックを受けて学習し、ルールを更新する
- 「〇〇分の学習を開始します」というフレーズが入力された場合、指定された時間に合わせた学習計画を提案する
  - work_log.mdとtime_log.mdを参照して最近の課題や進捗状況を確認
  - 指定された時間を考慮した効率的な学習内容を提案
  - タイムテーブル形式で具体的な学習スケジュールを示す
  - 優先度の高いタスクを中心に提案する
- 新しいコマンドフレーズをルールに追加する際は、必ず「📋 コマンドフレーズ一覧」の表にも追記する